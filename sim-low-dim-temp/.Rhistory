labs(fill = "Type") +
theme_minimal(base_size=12) +
theme(legend.position = c(.15,.85),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d)
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = "Type") +
theme_minimal(base_size=12) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d)
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = "Type") +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d)
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = "Type") +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = "Type (n=100, expression(tau*=*.3))") +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
labs(fill = expression(paste0("Type (n=100, ",tau,"=.3)")) +
)
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression(paste0("Type (n=100, ",tau,"=.3)"))) +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression(paste0("Type (n=100",tau,"=.3)"))) +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression("Type (n=100"tau"=.3)")) +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
paste0("Type (n=100",tau,"=.3)")
expression(paste0("Type (n=100",tau,"=.3)"))
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression("Type (n=100",tau,"=.3)")) +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression("Type (n=100"*tau*"=.3)")) +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression("Type (n=100, "*tau*"=.3)")) +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression("Type (n=100, "*tau*"=0.25)")) +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.35),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression("Type (n=100, "*tau*"=0.25)")) +
theme_minimal(base_size=14) +
theme(legend.position = c(.20,.40),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression("Type (n=100, "*tau*"=0.25)")) +
theme_minimal(base_size=14) +
theme(legend.position = c(.10,.40),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
ggplot(res[grep("sup",loss_type)][dtau == 0 & tau == .25 & n == 100], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = expression("Type (n=100, "*tau*"=0.25)")) +
theme_minimal(base_size=14) +
theme(legend.position = c(.15,.40),
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95"),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("Supremum distance") +
facet_grid(type2+n~d) +
theme(strip.text.y = element_blank())
mc_sup2 <- replicate(1000, {max(abs(rnorm(p)))}) # choose p
mc_sup3 <- replicate(1000, {max(abs(rnorm(p)))}) # choose p
mc_supS <- replicate(1000, {max(abs(rnorm(p)))}) # choose p
mc_supS2 <- replicate(1000, {max(abs(rnorm(p)))}) # choose p
mc_supS3 <- replicate(1000, {max(abs(rnorm(p)))}) # choose p
ggplot(res[grep("euc",loss_type),], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .5) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = "Type") +
theme_minimal(base_size=12) +
theme(legend.position = c(.6,.75),
# legend.box = "horizontal",
legend.direction = "horizontal",
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95")) +
xlab("Euclidean distance")
res[, p := d*(d-1)/2]
res[loss_type == "maha", loss_p := loss - p]
res[loss_type == "maha2", loss_p := loss - (d-1)]
res[loss_type == "maha3", loss_p := loss - (p-d)]
ggplot(res[grep("maha",loss_type)][dtau == 0 & tau == .3], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = "Type") +
theme_minimal(base_size=12) +
theme(legend.position = c(.25,.75),
# legend.box = "horizontal",
legend.direction = "horizontal",
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95")) +
xlab("Supremum distance") +
facet_grid(type2+n~d)
ggplot(res[grep("maha",loss_type)][dtau == 0 & tau == .3], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = "Type") +
theme_minimal(base_size=12) +
theme(legend.position = c(.25,.75),
# legend.box = "horizontal",
legend.direction = "horizontal",
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95")) +
xlab("Supremum distance") +
facet_grid(n~d)
res[grep("maha",loss_type)][dtau == 0 & tau == .3]
res[grep("maha",loss_type)][dtau == 0 & tau == .25]
ggplot(res[grep("maha",loss_type)][dtau == 0 & tau == .25], aes(x=loss,fill=loss_type)) +
geom_density(alpha = .75) +
# geom_density(data = data.frame(loss = mc_sup, loss_type="mc"), aes(x=loss), alpha = .75) +
scale_fill_discrete(guide = guide_legend(
direction = "horizontal",
title.position = "top"
)) +
labs(fill = "Type") +
theme_minimal(base_size=12) +
theme(legend.position = c(.25,.75),
# legend.box = "horizontal",
legend.direction = "horizontal",
legend.text = element_text(size = 12),
legend.box.background = element_rect(fill = "grey95"),
legend.text.align = 0,
# legend.spacing.x = unit(.5,"cm"),
panel.background = element_rect(color = "grey95")) +
xlab("Supremum distance") +
facet_grid(n~d)
res[grep("euc",loss_type), type2 := "unstand"]
res[grep("maha",loss_type), type2 := "stand"]
setwd("C:/Users/Samuel/Dropbox/Git Projects/testing-tau/sim-low-dim")
# basic sample
mc_samp <- lapply(seq(5,20,5), function(d){
replicate(10000, {
p <- d*(d-1)/2
l.ij.mat <- t(combn(d,2))
t0 <- rnorm(1)
t1 <- rnorm(d)
t2 <- rnorm(p)
cbind(rep(t0,p),t1[l.ij.mat[,1]]+t1[l.ij.mat[,2]],t2)
})
})
library(parallel)
library(data.table)
library(Matrix)
res <- fread("clayton2.csv")
res <- melt(res, measure.vars = c("maha","maha2","maha3",
"euc","euc2","euc3",
"sup","sup2","sup3",
"supS","supS2","supS3"), variable.name = "loss_type", value.name = "loss")
res[, p := d*(d-1)/2]
res[, delta2 := sigma2 + (d-4)*sigma1 - (d-3)*sigma0]
res[, delta3 := sigma2 - 2*sigma1 + sigma0]
names(mc_samp) <- seq(5,20,5)
# r <- which(res$loss_type %in% c("sup","sup2","sup3") & res$dtau == 0)[1]
# Compute Monte Carlo quantile
monteCarlo <- function(res,r){
loss_type <- res[r,loss_type]
loss <- res[r,loss]
n <- res[r,n]
d <- res[r,d]
p <- res[r,p]
sigma2 <- n*res[r,sigma2]
sigma1 <- n*res[r,sigma1]
sigma0 <- n*res[r,sigma0]
l.ij.mat <- t(combn(d,2))
ij.l.mat <- matrix(NA,d,d)
ij.l.mat[rbind(l.ij.mat,l.ij.mat[,2:1])] <- 1:p
if(sigma0 < 0) sigma0 <- 0
if(loss_type == "sup"){
G <- diag(p) - 1/p
}else if(loss_type == "sup2"){
B <- Matrix(0, nrow = p, ncol = d, sparse = T)
for(i in 1:d){
B[ij.l.mat[i,-i],i] <- 1
}
BtB <- B %*% t(B)
G <- as.matrix(B %*% solve(crossprod(B)) %*% t(B)) - 1/p
}else if(loss_type == "sup3"){
B <- Matrix(0, nrow = p, ncol = d, sparse = T)
for(i in 1:d){
B[ij.l.mat[i,-i],i] <- 1
}
BtB <- B %*% t(B)
G <- diag(p) - as.matrix(B %*% solve(crossprod(B)) %*% t(B))
}
mc_samp_temp <- apply(mc_samp[[as.character(d)]], 3, function(M){
max(abs(G %*% M %*% sqrt(c(sigma0,
sigma1 - sigma0,
sigma2 - 2*sigma1 + sigma0))))
})
mean(mc_samp_temp > loss)
}
clus <- makeCluster(detectCores()/2)
clus
clusterEvalQ(clus, expr={
library(data.table)
library(Matrix)
})
clusterExport(clus, varlist=c("monteCarlo","res","mc_samp"), envir = environment())
#
#
ind <- which(res$loss_type %in% c("sup","sup2","sup3"))
ind
#
#
ind <- which(res$loss_type %in% c("sup","sup2","sup3"))[10]
#
#
ind <- which(res$loss_type %in% c("sup","sup2","sup3"))[1:10]
res[ind, pval := parSapply(clus,ind, function(r) monteCarlo(res,r))]
res
stopCluster(clus)
res <- fread("res-pval.csv")
res[, decision := pval < .05]
res <- res[order(ID),]
res2 <- res[, .(m_decision = mean(decision)), .(n,d,tau,dtau,loss_type)]
types <- paste0("maha", c("","2","3"))
res2 <- res[dtau == 0 & tau == .25 & loss_type %in% types, .(m_decision = mean(decision)), .(n,d,loss_type)]
dcast(res2, n + d ~ loss_type)
dcast(res2, n + d ~ loss_type, value.var = "m_decision")
types <- paste0("maha", c("","2","3"))
res2 <- res[dtau == .1 & tau == .25 & loss_type %in% types, .(m_decision = mean(decision)), .(n,d,loss_type)]
dcast(res2, n + d ~ loss_type, value.var = "m_decision")
types <- paste0("euc", c("","2","3"))
res2 <- res[dtau == 0 & tau == .25 & loss_type %in% types, .(m_decision = mean(decision)), .(n,d,loss_type)]
dcast(res2, n + d ~ loss_type, value.var = "m_decision")
types <- paste0("supS", c("","2","3"))
res2 <- res[dtau == 0 & tau == .25 & loss_type %in% types, .(m_decision = mean(decision)), .(n,d,loss_type)]
dcast(res2, n + d ~ loss_type, value.var = "m_decision")
res3 <- dcast(res2, ...~loss_type, value.var = "m_decision")
res3 <- res3[d==10 & dtau ==0, -c(2,4)][order(tau),c(2,1,3:14)]
mat <- matrix(NA,11,18)
res3 <- dcast(res2, ...~loss_type, value.var = "m_decision")
res3[d==10 & dtau ==0, -c(2,4)]
res2
res2 <- res[, .(m_decision = mean(decision)), .(n,d,tau,dtau,loss_type)]
res3 <- dcast(res2, ...~loss_type, value.var = "m_decision")
res3 <- res3[d==10 & dtau ==0, -c(2,4)][order(tau),c(2,1,3:14)]
mat <- matrix(NA,11,18)
mat[c(1:3,5:7,9:11),c(1,2,4:6,8:10,12:14,16:18)] <- as.matrix(res3)
colnames(mat)[c(1,2,4:6,8:10,12:14,16:18)] <- colnames(res3)
print(xtable(mat), include.rownames=FALSE)
library(xtable)
print(xtable(mat), include.rownames=FALSE)
res
