maha <- maha_d + maha_p
sup <- sqrt(n)*max(abs(t.hat-t.bar))
sup_p <- sqrt(n)*max(abs(t.hat-t.star))
sup_d <- sqrt(n)*max(abs(t.col-t.bar))
#### p-values
MCeuc <- delta[1]*rchisq(M, p-d) + delta[2]*rchisq(M, d-1)
MCsup <- replicate(M, {
Z1 <- rnorm(d,0,sqrt(s10))
Z2 <- rnorm(p,0,sqrt(s210))
Z.hat <- Z2 + Z1[ij.mat[,1]] + Z1[ij.mat[,2]]
Z.bar <- mean(Z.hat)
Z.col <- sapply(1:d, function(i) mean(Z.hat[ij.l.mat[,i]]))
Z.star <- (d-1)/(d-2)*(Z.col[ij.mat[,1]] + Z.col[ij.mat[,2]]) - d/(d-2)*Z.bar
sapply(list(Z.hat - Z.bar,
Z.hat - Z.star,
Z.col - Z.bar),function(z) max(abs(z)))
})
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p)
)
pvals
testEquiRankWeird <- function(X, M = 2000){
# setup -------------------------------------------------------------------
n <- nrow(X)
d <- ncol(X)
p <- d*(d-1)/2
ij.mat <- t(combn(d,2))
ij.l.mat <- matrix(0,d,d)
ij.l.mat[rbind(ij.mat,ij.mat[,2:1])] <- 1:p
# computation of estimates ------------------------------------------------
Tau.hat <- cor.fk(X)
t.hat <- Tau.hat[ij.mat]
t.col <- (colSums(Tau.hat)-1)/(d-1)
t.bar <- mean(t.col)
t.star <- (d-1)/(d-2)*(t.col[ij.mat[,1]] + t.col[ij.mat[,2]]) - d/(d-2)*t.bar
s210 <- n*crossprod(t.hat - t.star)/(p-d)
s10 <- n*crossprod(t.star - t.bar)/(d*(d-1))
delta <- rbind(s210,s210+(d-2)*s10)
euc <- c(n*crossprod(t.hat-t.bar))
maha_p <- c(n*crossprod(t.hat-t.star))/delta[1]
maha_d <- (d-1)^2/(d-2)*c(n*crossprod(t.col-t.bar))/delta[2]
maha <- maha_d + maha_p
sup <- sqrt(n)*max(abs(t.hat-t.bar))
sup_p <- sqrt(n)*max(abs(t.hat-t.star))
sup_d <- sqrt(n)*max(abs(t.col-t.bar))
#### p-values
MCeuc <- delta[1]*rchisq(M, p-d) + delta[2]*rchisq(M, d-1)
MCsup <- replicate(M, {
Z1 <- rnorm(d,0,sqrt(s10))
Z2 <- rnorm(p,0,sqrt(s210))
Z.hat <- Z2 + Z1[ij.mat[,1]] + Z1[ij.mat[,2]]
Z.bar <- mean(Z.hat)
Z.col <- sapply(1:d, function(i) mean(Z.hat[ij.l.mat[,i]]))
Z.star <- (d-1)/(d-2)*(Z.col[ij.mat[,1]] + Z.col[ij.mat[,2]]) - d/(d-2)*Z.bar
sapply(list(Z.hat - Z.bar,
Z.hat - Z.star,
Z.col - Z.bar),function(z) max(abs(z)))
})
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p)
)
pvals
}
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin,test.jackknife,test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin,test.jackknife,test.weird)
matrix(test,nrow=3,byrow=T)
testEquiRankWeird <- function(X, M = 2000){
# setup -------------------------------------------------------------------
n <- nrow(X)
d <- ncol(X)
p <- d*(d-1)/2
ij.mat <- t(combn(d,2))
ij.l.mat <- matrix(0,d,d)
ij.l.mat[rbind(ij.mat,ij.mat[,2:1])] <- 1:p
# computation of estimates ------------------------------------------------
Tau.hat <- cor.fk(X)
t.hat <- Tau.hat[ij.mat]
t.col <- (colSums(Tau.hat)-1)/(d-1)
t.bar <- mean(t.col)
t.star <- (d-1)/(d-2)*(t.col[ij.mat[,1]] + t.col[ij.mat[,2]]) - d/(d-2)*t.bar
# s210 <- n*crossprod(t.hat - t.star)/(p-d)
# s10 <- n*crossprod(t.star - t.bar)/(d*(d-1))
s210 <- n*crossprod(t.hat - t.col[ij.mat[,1]] - t.col[ij.mat[,2]] + t.bar)/(p-d)
s10 <- n*crossprod(t.col[ij.mat[,1]] + t.col[ij.mat[,2]] - 2*t.bar)/(d*(d-1))
delta <- rbind(s210,s210+(d-2)*s10)
euc <- c(n*crossprod(t.hat-t.bar))
maha_p <- c(n*crossprod(t.hat-t.star))/delta[1]
maha_d <- (d-1)^2/(d-2)*c(n*crossprod(t.col-t.bar))/delta[2]
maha <- maha_d + maha_p
sup <- sqrt(n)*max(abs(t.hat-t.bar))
sup_p <- sqrt(n)*max(abs(t.hat-t.star))
sup_d <- sqrt(n)*max(abs(t.col-t.bar))
#### p-values
MCeuc <- delta[1]*rchisq(M, p-d) + delta[2]*rchisq(M, d-1)
MCsup <- replicate(M, {
Z1 <- rnorm(d,0,sqrt(s10))
Z2 <- rnorm(p,0,sqrt(s210))
Z.hat <- Z2 + Z1[ij.mat[,1]] + Z1[ij.mat[,2]]
Z.bar <- mean(Z.hat)
Z.col <- sapply(1:d, function(i) mean(Z.hat[ij.l.mat[,i]]))
Z.star <- (d-1)/(d-2)*(Z.col[ij.mat[,1]] + Z.col[ij.mat[,2]]) - d/(d-2)*Z.bar
sapply(list(Z.hat - Z.bar,
Z.hat - Z.star,
Z.col - Z.bar),function(z) max(abs(z)))
})
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p)
)
pvals
}
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin,test.jackknife,test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin,test.jackknife,test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin,test.jackknife,test.weird)
matrix(test,nrow=3,byrow=T)
testEquiRankWeird <- function(X, M = 2000){
# setup -------------------------------------------------------------------
n <- nrow(X)
d <- ncol(X)
p <- d*(d-1)/2
ij.mat <- t(combn(d,2))
ij.l.mat <- matrix(0,d,d)
ij.l.mat[rbind(ij.mat,ij.mat[,2:1])] <- 1:p
# computation of estimates ------------------------------------------------
Tau.hat <- cor.fk(X)
t.hat <- Tau.hat[ij.mat]
t.col <- (colSums(Tau.hat)-1)/(d-1)
t.bar <- mean(t.col)
t.star <- (d-1)/(d-2)*(t.col[ij.mat[,1]] + t.col[ij.mat[,2]]) - d/(d-2)*t.bar
s210 <- n*crossprod(t.hat - t.star)/(p-d)
s10 <- n*crossprod(t.star - t.bar)/(d*(d-1))
# s210 <- n*crossprod(t.hat - t.col[ij.mat[,1]] - t.col[ij.mat[,2]] + t.bar)/(p-d)
# s10 <- n*crossprod(t.col[ij.mat[,1]] + t.col[ij.mat[,2]] - 2*t.bar)/(d*(d-1))
sup <- sqrt(n)*max(abs(t.hat-t.bar))
sup_p <- sqrt(n)*max(abs(t.hat-t.star))
sup_d <- sqrt(n)*max(abs(t.col-t.bar))
#### p-values
MCsup <- replicate(M, {
Z1 <- rnorm(d,0,sqrt(s10))
Z2 <- rnorm(p,0,sqrt(s210))
Z.hat <- Z2 + Z1[ij.mat[,1]] + Z1[ij.mat[,2]]
Z.bar <- mean(Z.hat)
Z.col <- sapply(1:d, function(i) mean(Z.hat[ij.l.mat[,i]]))
Z.star <- (d-1)/(d-2)*(Z.col[ij.mat[,1]] + Z.col[ij.mat[,2]]) - d/(d-2)*Z.bar
sapply(list(Z.hat - Z.bar,
Z.hat - Z.star,
Z.col - Z.bar),function(z) max(abs(z)))
})
pvals <- c(
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p)
)
pvals
}
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin,test.jackknife,test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin[-(1:3)],test.jackknife[-(1:3)],test.weird)
matrix(test,nrow=3,byrow=T)
test.plugin
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,2000)
test.jackknife <- testEquiRankJackknife(X,2000)
test.weird <- testEquiRankWeird(X,2000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,2000)
test.jackknife <- testEquiRankJackknife(X,2000)
test.weird <- testEquiRankWeird(X,2000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
test.plugin <- testEquiRankPlugin(X,2000)
test.jackknife <- testEquiRankJackknife(X,2000)
test.weird <- testEquiRankWeird(X,2000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
test.plugin <- testEquiRankPlugin(X,5000)
test.jackknife <- testEquiRankJackknife(X,5000)
test.weird <- testEquiRankWeird(X,5000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
test.plugin <- testEquiRankPlugin(X,10000)
test.jackknife <- testEquiRankJackknife(X,10000)
test.weird <- testEquiRankWeird(X,10000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
test.plugin <- testEquiRankPlugin(X,10000)
test.jackknife <- testEquiRankJackknife(X,10000)
test.weird <- testEquiRankWeird(X,10000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
test.plugin <- testEquiRankPlugin(X,10000)
test.jackknife <- testEquiRankJackknife(X,10000)
test.weird <- testEquiRankWeird(X,10000)
test <- c(test.plugin[-(1:4)],test.jackknife[-(1:4)],test.weird)
matrix(test,nrow=3,byrow=T)
(2000/20)
(5000/20)
(4000/20)
BOOTsup <- replicate(M, {
colSums(rnorm(n) %*% (t(Ths) - Tbs))
})
# components of Hajek projection
T.hajek <- lapply(1:n, function(r){
v <- t(X[r,] < t(X[-r,]))
v <- rowSums(apply(v, 1, function(v){
4*(outer(v,v,"=="))[ij.mat]
}))
V <- diag(d)
V[ij.mat] <- V[ij.mat[,2:1]] <- v #- mean(v)# - t.cen/n
V
})
Tcs <- sapply(T.hajek, function(Th) (colSums(Th)-1)/(d-1))
Ths <- sapply(T.hajek, function(Th) Th[ij.mat])
Tbs <- apply(Ths, 2, mean)
BOOTsup <- replicate(M, {
colSums(rnorm(n) %*% (t(Ths) - Tbs))
})
BOOTsup
BOOTsup <- replicate(M, {
max(abs(colSums(rnorm(n) %*% (t(Ths) - Tbs))))
})
BOOTsup
n
t(Ths) - Tbs
Ths - Tbs
Ths
# Boot
BOOTsup <- replicate(M, {
max(abs(colSums(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1)))))
})
BOOTsup
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup_boot = mean(BOOTsup[1,] > sup),
)
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup_boot = mean(BOOTsup[1,] > sup)
)
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup_boot = mean(BOOTsup > sup)
)
pvals
sup
BOOTsup
d
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup_boot = mean(d*BOOTsup > sup)
)
pvals
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup_boot = mean(sqrt(n)*BOOTsup > sup)
)
pvals
# Boot
BOOTsup <- replicate(M, {
max(abs(colSums(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1)^2))))
})
BOOTsup
# Boot
BOOTsup <- replicate(M, {
max(abs(colSums(rnorm(n) %*% (t(Ths) - Tbs)/(n))))
})
BOOTsup
# Boot
BOOTsup <- replicate(M, {
max(abs(colSums(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1)^2))))
})
BOOTsup
# Boot
BOOTsup <- replicate(M, {
max(abs(colSums(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1)))))
})
BOOTsup
dim(Ths)
dim(Tbs)
length(Tbs)
rnorm(n) %*% (t(Ths) - Tbs)
# Boot
BOOTsup <- replicate(M, {
max(abs(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1))))
})
BOOTsup
sup
# Boot
BOOTsup <- replicate(M, {
sqrt(n)*max(abs(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1))))
})
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup_boot = mean(BOOTsup > sup)
)
pvals
testEquiRankJackknife <- function(X, M = 2000){
# setup -------------------------------------------------------------------
n <- nrow(X)
d <- ncol(X)
p <- d*(d-1)/2
ij.mat <- t(combn(d,2))
ij.l.mat <- matrix(0,d,d)
ij.l.mat[rbind(ij.mat,ij.mat[,2:1])] <- 1:p
# computation of estimates ------------------------------------------------
Tau.hat <- cor.fk(X)
t.hat <- Tau.hat[ij.mat]
t.col <- (colSums(Tau.hat)-1)/(d-1)
t.bar <- mean(t.col)
t.star <- (d-1)/(d-2)*(t.col[ij.mat[,1]] + t.col[ij.mat[,2]]) - d/(d-2)*t.bar
# components of Hajek projection
T.hajek <- lapply(1:n, function(r){
v <- t(X[r,] < t(X[-r,]))
v <- rowSums(apply(v, 1, function(v){
4*(outer(v,v,"=="))[ij.mat]
}))
V <- diag(d)
V[ij.mat] <- V[ij.mat[,2:1]] <- v #- mean(v)# - t.cen/n
V
})
Tcs <- sapply(T.hajek, function(Th) (colSums(Th)-1)/(d-1))
Ths <- sapply(T.hajek, function(Th) Th[ij.mat])
Tbs <- apply(Ths, 2, mean)
sigma <- c(
mean(apply(Ths, 1, var))/(n*(n-1)),
mean(apply(Tcs, 1, var))/(n*(n-1)),
var(Tbs)/(n*(n-1))
)
sigma <- c(sigma %*% matrix(c(1,0,0,
-1/(d-2),(d-1)/(d-2),0,
1/(p-2*d+3),-2*(d-1)/(p-2*d+3),p/(p-2*d+3)),3,3))
delta <- rbind(c(1,-2,1),c(1,d-4,3-d)) %*% sigma
euc <- c(n*crossprod(t.hat-t.bar))
maha_p <- c(n*crossprod(t.hat-t.star))/delta[1]
maha_d <- (d-1)^2/(d-2)*c(n*crossprod(t.col-t.bar))/delta[2]
maha <- maha_d + maha_p
sup <- sqrt(n)*max(abs(t.hat-t.bar))
sup_p <- sqrt(n)*max(abs(t.hat-t.star))
sup_d <- sqrt(n)*max(abs(t.col-t.bar))
#### p-values
MCeuc <- delta[1]*rchisq(M, p-d) + delta[2]*rchisq(M, d-1)
MCsup <- replicate(M, {
Z1 <- rnorm(d,0,sqrt(sigma[2]-sigma[3]))
Z2 <- rnorm(p,0,sqrt(delta[1]))
Z.hat <- Z2 + Z1[ij.mat[,1]] + Z1[ij.mat[,2]]
Z.bar <- mean(Z.hat)
Z.col <- sapply(1:d, function(i) mean(Z.hat[ij.l.mat[,i]]))
Z.star <- (d-1)/(d-2)*(Z.col[ij.mat[,1]] + Z.col[ij.mat[,2]]) - d/(d-2)*Z.bar
sapply(list(Z.hat - Z.bar,
Z.hat - Z.star,
Z.col - Z.bar),function(z) max(abs(z)))
})
# Boot
BOOTsup <- replicate(M, {
sqrt(n)*max(abs(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1))))
})
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sup = mean(MCsup[1,] > sup),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup_boot = mean(BOOTsup > sup)
)
pvals
}
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,4000)
test.jackknife <- testEquiRankJackknife(X,4000)
test.weird <- testEquiRankWeird(X,4000)
test <- c(test.plugin,test.jackknife,test.weird)
test
res.grid <- sim.grid[rep(r,length(test)),]
res.grid[1:length(test.plugin), `:=` (sigma = "plugin", test = names(test.plugin), pval = test.plugin)]
res.grid[(1+length(test.plugin)):(length(test.plugin)+length(test.jackknife)), `:=` (sigma = "jackknife", test = names(test.jackknife), pval = test.jackknife)]
res.grid[(1+length(test.plugin)+length(test.jackknife)):length(test), `:=` (sigma = "jackknife", test = names(test.jackknife), pval = test.jackknife)]
res.grid
test <- c(test.plugin,test.jackknife,test.weird)
X <- generateData(n,d,tau,dtau,dtau_type,distribution)
test.plugin <- testEquiRankPlugin(X,4000)
test.jackknife <- testEquiRankJackknife(X,4000)
test.weird <- testEquiRankWeird(X,4000)
test <- c(test.plugin,test.jackknife,test.weird)
res.grid <- sim.grid[rep(r,length(test)),]
res.grid[1:length(test.plugin), `:=` (sigma = "plugin", test = names(test.plugin), pval = test.plugin)]
res.grid
res.grid[(1+length(test.plugin)):(length(test.plugin)+length(test.jackknife)), `:=` (sigma = c(rep("jackknife",7),"bootstrap"), test = names(test.jackknife), pval = test.jackknife)]
res.grid
res.grid[(1+length(test.plugin)+length(test.jackknife)):length(test), `:=` (sigma = "weird", test = names(test.weird), pval = test.weird)]
res.grid
