MCeuc <- delta[1]*rchisq(M, p-d) + delta[2]*rchisq(M, d-1)
MCsup <- replicate(M, {
Z1 <- rnorm(d,0,sqrt(sigma[2]-sigma[3]))
Z2 <- rnorm(p,0,sqrt(delta[1]))
Z.hat <- Z2 + Z1[ij.mat[,1]] + Z1[ij.mat[,2]]
Z.bar <- mean(Z.hat)
Z.col <- sapply(1:d, function(i) mean(Z.hat[ij.l.mat[,i]]))
Z.star <- (d-1)/(d-2)*(Z.col[ij.mat[,1]] + Z.col[ij.mat[,2]]) - d/(d-2)*Z.bar
sapply(list(Z.hat - Z.bar,
Z.hat - Z.star,
Z.col - Z.bar),function(z) max(abs(z)))
})
MCsups <- replicate(M, {z <- rnorm(p); max(abs(z-mean(z)))})
# print(difftime(Sys.time(),tiime))
# tiime <- Sys.time()
# Boot
BOOTsup <- replicate(M, {
sqrt(n)*max(abs(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1))))
})
# print(difftime(Sys.time(),tiime))
pvals <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sups = mean(MCsups > sups),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup = mean(MCsup[1,] > sup),
sup_boot = mean(BOOTsup > sup)
)
if(sigma[2] < sigma[3] | any(sigma < 0)){
sigma[2:3] <- mean(sigma[2:3])
sigma <- pmax(sigma,0)
delta <- rbind(c(1,-2,1),c(1,d-4,3-d)) %*% sigma
delta <- rbind(c(1,-2,1),c(1,d-4,3-d)) %*% sigma
euc <- c(n*crossprod(t.hat-t.bar))
maha_p <- c(n*crossprod(t.hat-t.star))/delta[1]
maha_d <- (d-1)^2/(d-2)*c(n*crossprod(t.col-t.bar))/delta[2]
maha <- maha_d + maha_p
sup <- sqrt(n)*max(abs(t.hat-t.bar))
sup_p <- sqrt(n)*max(abs(t.hat-t.star))
sup_d <- sqrt(n)*max(abs(t.col-t.bar))
sups <- sqrt(n)*max(abs((t.hat-t.star) * sqrt(1/delta[1]) + (t.star-t.bar) * sqrt(1/delta[2])))
#### p-values
MCeuc <- delta[1]*rchisq(M, p-d) + delta[2]*rchisq(M, d-1)
MCsup <- replicate(M, {
Z1 <- rnorm(d,0,sqrt(sigma[2]-sigma[3]))
Z2 <- rnorm(p,0,sqrt(delta[1]))
Z.hat <- Z2 + Z1[ij.mat[,1]] + Z1[ij.mat[,2]]
Z.bar <- mean(Z.hat)
Z.col <- sapply(1:d, function(i) mean(Z.hat[ij.l.mat[,i]]))
Z.star <- (d-1)/(d-2)*(Z.col[ij.mat[,1]] + Z.col[ij.mat[,2]]) - d/(d-2)*Z.bar
sapply(list(Z.hat - Z.bar,
Z.hat - Z.star,
Z.col - Z.bar),function(z) max(abs(z)))
})
MCsups <- replicate(M, {z <- rnorm(p); max(abs(z-mean(z)))})
# print(difftime(Sys.time(),tiime))
# tiime <- Sys.time()
# Boot
BOOTsup <- replicate(M, {
sqrt(n)*max(abs(rnorm(n) %*% (t(Ths) - Tbs)/(n*(n-1))))
})
pvals.equal <- c(
maha = pchisq(maha,p-1,lower.tail = F),
maha_d = pchisq(maha_d,d-1,lower.tail = F),
maha_p = pchisq(maha_p,p-d,lower.tail = F),
euc = mean(MCeuc > euc),
sups = mean(MCsups > sups),
sup_d = mean(MCsup[3,] > sup_d),
sup_p = mean(MCsup[2,] > sup_p),
sup = mean(MCsup[1,] > sup),
sup_boot = mean(BOOTsup > sup)
)
}else{
pvals.equal <- pvals
}
rbind(pvals,pvals.equal)
}
test.jackknife.cor <- testEquiRankJackknifeCor(X,4000)
test.jackknife.cor
res.grid <- sim.grid[rep(r,4*ncol(test.jackknife)),]
res.grid[1:ncol(test.jackknife), `:=` (sigma = "jackknife", correction = FALSE, force_constraints = FALSE, test = colnames(test.jackknife), pval = test.jackknife[1,])]
res.grid[ncol(test.jackknife) + 1:ncol(test.jackknife), `:=` (sigma = "jackknife", correction = FALSE, force_constraints = TRUE, test = colnames(test.jackknife), pval = test.jackknife[2,])]
res.grid[2*ncol(test.jackknife) + 1:ncol(test.jackknife), `:=` (sigma = "jackknife", correction = TRUE, force_constraints = FALSE, test = colnames(test.jackknife), pval = test.jackknife.cor[1,])]
res.grid[3*ncol(test.jackknife) + 1:ncol(test.jackknife), `:=` (sigma = "jackknife", correction = TRUE, force_constraints = TRUE, test = colnames(test.jackknife), pval = test.jackknife.cor[2,])]
res.grid
# packages ----------------------------------------------------------------
library(data.table)
library(mvtnorm)
library(HAC)
library(pcaPP)
library(Matrix)
# functions ---------------------------------------------------------------
source("functions/simFunCorrection.R")
# procedure ---------------------------------------------------------------
# set wd appropriately and
# launch with nohup R CMD BATCH sim-low-dim.R log.txt &
# should take much less than a day
tiime <- Sys.time()
simFun(n = c(50,150),
d = c(5,10),
tau = c(0,.3),
dtau = c(0,.1),
distribution = c("normal"),
num_sim = 1,
filename = "dt_correction_1",
# clus = c(rep("dms11",8),rep(c("dms1","dms2","dms3","dms4","dms5","dms6","dms7"),4))
)
difftime(Sys.time(),tiime)
setwd("sim-correction")
library(data.table)
library(xtable)
dt <- fread("dt_equal_1.csv")
dt <- dt[order(ID),]
dt
dt[, isNA := is.na(pval)]
# dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05, na.rm = T)), .(distribution, tau, sigma, test, n, d)]
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d)]
dt.sub
dt.sub <- dcast(dt.sub, d + sigma + test ~ n + tau, value.var = "size")
dt.sub
# dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05, na.rm = T)), .(distribution, tau, sigma, test, n, d)]
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction, force_constraints)]
dt.sub
dt.sub <- dcast(dt.sub, d + sigma + test ~ n + tau, value.var = "size")
# dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05, na.rm = T)), .(distribution, tau, sigma, test, n, d)]
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + sigma + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub
dt <- fread("dt_correction_1.csv")
dt <- dt[order(ID),]
dt
dt[, isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + sigma + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints + correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints + correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints + correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == T, .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & correction == F, .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & correction == T, .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & correction == F, .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & correction == T, .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & force_constraints == F, .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + correction, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & force_constraints == T, .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + correction, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & correction == F, .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & correction == T, .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & force_constraints == F & dtau_type == "single", .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + correction, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & force_constraints == T & dtau_type == "single", .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + correction, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & correction == F & dtau_type == "single", .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & correction == T & dtau_type == "single", .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & force_constraints == F & dtau_type == "column", .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + correction, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & correction == F & dtau_type == "column", .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "power")
dt.sub
dt.sub <- dt[dtau == .1 & distribution == "normal" & correction == T & dtau_type == "column", .(power = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "power")
dt.sub
dt <- fread("dt_equal_1.csv")
dt <- dt[order(ID),]
dt
dt[, isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + sigma + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + sigma + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
# dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = mean(pval < .05, na.rm = T)), .(distribution, tau, sigma, test, n, d)]
dt.sub <- dt[dtau == 0 & distribution == "normal" & sigma == "plugin", .(size = mean(pval < .05)), .(distribution, tau, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + sigma + test ~ n + tau + force_constraints, value.var = "size")
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt
dt[, isNA := is.na(pval)]
dt[isNA == T,]$ID
dt[isNA == T,]$num_sim
areNA <- unique(dt[isNA == T,]$num_sim)
dt[num_sim == areNA, isNA := T]
dt[num_sim %in% areNA, isNA := T]
dt
dt.sub <- dt[dtau == 0 & distribution == "normal" & sigma == "plugin", .(size = mean(pval < .05)), .(distribution, tau, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & sigma == "plugin", .(size = mean(pval < .05, na.rm=T)), .(distribution, tau, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & sigma == "plugin", .(size = mean(pval < .05)), .(distribution, tau, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & sigma == "plugin", .(size = mean(pval < .05, na.rm=T)), .(distribution, tau, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
round(dt.sub, 3)
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & sigma == "plugin", .(size = round(mean(pval < .05, na.rm=T),3)), .(distribution, tau, test, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + force_constraints, value.var = "size")
dt.sub
dt
dt[dtau == 0 & test == "sup"]
dt[dtau == 0 & test == "sup" & force_constraints == F,]
dt <- fread("dt_correction_1.csv")
dt <- dt[order(ID),]
dt
dt[, isNA := is.na(pval)]
dt
dt[, isNA := is.na(pval)]
areNA <- unique(dt[isNA == T,]$num_sim)
dt[num_sim %in% areNA, isNA := T]
dt
dt[dtau == 0 & test == "sup" & force_constraints == F, .(sumNA = sum(isNA)), .(distribution, tau, sigma, test, n, d, correction)]
dt
dt[correction == F, isNA := is.na(pval)]
areNA <- unique(dt[correction == F & isNA == T,]$num_sim)
dt[correction == F & num_sim %in% areNA, isNA := T]
dt
dt
dt[correction == F, isNA := is.na(pval)]
areNA <- unique(dt[correction == F & isNA == T,]$num_sim)
dt[correction == F & num_sim %in% areNA, isNA := T]
dt[correction == T, isNA := is.na(pval)]
areNA <- unique(dt[correction == T & isNA == T,]$num_sim)
dt[correction == T & num_sim %in% areNA, isNA := T]
dt[dtau == 0 & test == "sup" & force_constraints == F, .(sumNA = sum(isNA)), .(distribution, tau, sigma, test, n, d, correction)]
dt <- fread("dt_correction_1.csv")
dt <- dt[order(ID),]
dt[correction == F, isNA := is.na(pval)]
dt[dtau == 0 & test == "sup" & force_constraints == F, .(sumNA = sum(isNA)), .(distribution, tau, sigma, test, n, d, correction)]
dt <- fread("dt_correction_1.csv")
dt <- dt[order(ID),]
dt[correction == F, isNA := is.na(pval)]
dt
dt <- fread("dt_correction_1.csv")
dt <- dt[order(ID),]
dt[1728000,]
dt <- fread("dt_correction_1.csv")
dt <- dt[order(ID),]
dt[,isNA := is.na(pval)]
dt[dtau == 0 & test == "sup" & force_constraints == F, .(sumNA = sum(isNA)), .(distribution, tau, sigma, test, n, d, correction)]
dt[,isNA := is.na(pval)]
dt[dtau == 0 & test == "sup", .(sumNA = sum(isNA)), .(distribution, tau, sigma, test, n, d, correction, force_constraints)]
dt[,isNA := is.na(pval)]
dt[dtau == 0 & test == "sup", .(sumNA = sum(isNA)), .(distribution, tau, sigma, test, n, d, correction)]
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup", .(sumNA = sum(isNA)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup", .(meanNA = mean(isNA)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup", .(meanNA = round(mean(isNA),2)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, d + test ~ n + tau + correction, value.var = "size")
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),2)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),2)), .(distribution, tau, test, n, d, correction)]
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),2)), .(tau, test, n, d, correction)]
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),2)), .(tau, n, d, correction)]
dt.sub
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "meanNA")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = mean(pval < .05)), .(distribution, tau, sigma, test, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = mean(pval < .05)), .(tau, n, d, correction)]
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n + force_constraints ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n + force_constraints ~ correction, value.var = "size")
dt.sub
dt <- fread("dt_equal_1.csv")
dt <- dt[order(ID),]
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),2)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "meanNA")
dt.sub
dt <- fread("dt_equal_1.csv")
dt <- dt[order(ID),]
dt[,isNA := is.na(pval)]
dt
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup", .(meanNA = round(mean(isNA),2)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ force_contraints, value.var = "meanNA")
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup", .(meanNA = round(mean(isNA),2)), .(tau, n, d, correction, sigma)]
dt.sub <- dcast(dt.sub, tau + d + n ~ force_contraints, value.var = "meanNA")
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup", .(meanNA = round(mean(isNA),2)), .(tau, n, d, correction, sigma)]
dt
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup", .(meanNA = round(mean(isNA),2)), .(tau, n, d, force_constraints, sigma)]
dt.sub <- dcast(dt.sub, tau + d + n ~ force_contraints + sigma, value.var = "meanNA")
dt.sub <- dcast(dt.sub, tau + d + n ~ force_constraints + sigma, value.var = "meanNA")
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == "F", .(meanNA = round(mean(isNA),2)), .(tau, n, d, sigma)]
dt.sub <- dcast(dt.sub, tau + d + n ~ sigma, value.var = "meanNA")
dt <- fread("dt_equal_1.csv")
dt <- dt[order(ID),]
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == "F", .(meanNA = round(mean(isNA),2)), .(tau, n, d, sigma)]
dt.sub <- dcast(dt.sub, tau + d + n ~ sigma, value.var = "meanNA")
dt.sub
dt[,isNA := is.na(pval)]
dt <- fread("dt_equal_1.csv")
dt <- dt[order(ID),]
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == "F", .(meanNA = round(mean(isNA),2)), .(tau, n, d, sigma)]
dt.sub
dt <- fread("dt_equal_1.csv")
dt <- dt[order(ID),]
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),2)), .(tau, n, d, sigma)]
dt.sub <- dcast(dt.sub, tau + d + n ~ sigma, value.var = "meanNA")
dt.sub
setwd("sim-correction")
library(data.table)
library(xtable)
# dt <- fread("dt_correction_1.csv")
dt <- fread("dt_correction_2.csv")
dt <- dt[order(ID),]
dt[,isNA := is.na(pval)]
dt.sub
dt
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),2)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "meanNA")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),2)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "meanNA")
dt.sub
dt[,isNA := is.na(pval)]
dt.sub <- dt[dtau == 0 & test == "sup" & force_constraints == F, .(meanNA = round(mean(isNA),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "meanNA")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n + force_constraints ~ correction, value.var = "size")
dt.sub
dt
dt.sub <- dt[dtau == 0 & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n + test ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup" & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n + test ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup" & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup" & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup" & distribution == "normal" & force_constraints == F, .(size = round(mean(pval < .05),3)), .(tau, n, d, correction)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n + force_constraints ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup"  & distribution == "normal", .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n + force_constraints ~ correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup"  & distribution == "normal", .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ force_constraints + correction, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup"  & distribution == "normal", .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sup"  & distribution == "normal", .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n  ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n + test ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0 & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints, test)]
dt.sub <- dcast(dt.sub, tau + d + n + test ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05, na.rm = T),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n  ~ correction + force_constraints, value.var = "size")
dt.sub
# maha
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "supS"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "ssup"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub
dt
dt.sub <- dt[dtau == 0  & test == "sups"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sups"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub1 <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
rbind(dt.sub,dt.sub1)
dt.sub - dt.sub1
dt.sub <- dt[dtau == 0  & test == "maha"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "euc"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub1 <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub <- dt[dtau == 0  & test == "maha"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub - dt.sub1
dt.sub1
dt.sub
dt.sub - dt.sub1
dt.sub <- dt[dtau == 0  & test == "sup"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub1 <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub <- dt[dtau == 0  & test == "sups"  & distribution == "normal", .(size = round(mean(pval < .05),3)), .(tau, n, d, correction, force_constraints)]
dt.sub <- dcast(dt.sub, tau + d + n ~ correction + force_constraints, value.var = "size")
dt.sub
dt.sub - dt.sub1
